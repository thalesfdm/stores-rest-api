{
	"info": {
		"_postman_id": "2a58cb6f-4951-47e3-aa24-4481e0343e13",
		"name": "Stores REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User create store and item",
			"item": [
				{
					"name": "{{url}}/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4e6ee7b-8e02-4c7d-885b-9bbb2d8b007b",
								"exec": [
									"postman.clearEnvironmentVariable(\"access_token\");",
									"",
									"let jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.'",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"thalesfdm\",\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a639290c-d665-436b-89d9-5b2f6ffc741b",
								"exec": [
									"let jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"",
									"tests[\"Body contains 'access_token'\"] = responseBody.has(\"access_token\");",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';",
									"tests[\"Response time is less than 150ms\"] = responseTime < 150;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT "
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"thalesfdm\",\n\t\"password\": \"123456\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/store/test_store",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fcd0208-b525-445f-abe5-09c4c5ff025b",
								"exec": [
									"let jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Store name is returned\"] = jsonData.name === 'test_store';",
									"tests[\"Store id is returned\"] = jsonData.id === 1;",
									"tests[\"Store items are an empty list\"] = jsonData.items.length === 0;",
									"",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"postman.setEnvironmentVariable(\"store_id\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/test_store",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"test_store"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{url}}/item/test_item in test_store",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8d48658-6c1e-4d4f-b4aa-c8215fd40330",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
									"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';",
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 1.99,\n\t\"store_id\": {{store_id}}\n}"
						},
						"url": {
							"raw": "{{url}}/item/test_item",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"test_item"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}